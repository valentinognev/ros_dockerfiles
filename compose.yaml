version: '3.4'
## "docker-compose" must be installed
## for making graphics work, run:   xhost local:root
##############################################################################################################
services:
  # galactic_nvidia:
  #   image: ros_galactic_nvidia
  #   network_mode: "host" 
  #   privileged: true
  #   volumes:
  #     - /home/valentin/ros2_ws:/home/valentin/ros2_ws                  # homeDir:containerDir   
  #     - /home/valentin/Crazyflie/crazyflie-firmware-ros:/home/valentin/crazyflie-firmware-ros/
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /home/valentin/.Xauthority:/home/valentin/.Xauthority
  #     - /home/valentin/dockerfiles
  #   devices:
  #     - /dev:/dev
  #   environment:
  #     - CC=/usr/bin/cc
  #     - CXX=/usr/bin/c++
  #     - DISPLAY=:1                      # result of:  echo $DISPLAY 
  #     - QT_X11_NO_MITSHM=1
  #     - XAUTHORITY=/home/valentin/.Xauthority
  #     - DOCKER_USER_NAME=valentin       # $(id -un)
  #     - DOCKER_USER_ID=1000             # $(id -u)
  #     - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
  #     - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
  #     - ROS_IP=127.0.0.1 
  #     - NVIDIA_DRIVER_CAPABILITIES=all
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_galactic_nvidia
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
  #   command: /bin/sh -c "while sleep 1000; do :; done"     
##############################################################################################################
  # foxy_nvidia:
  #   image: ros_foxy_nvidia
  #   network_mode: "host" 
  #   privileged: true
  #   volumes:
  #     - /home/valentin/ros2_ws:/home/valentin/ros2_ws                  # homeDir:containerDir   
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /home/valentin/.Xauthority:/home/valentin/.Xauthority
  #     - /home/valentin/dockerfiles
  #   devices:
  #     - /dev:/dev
  #   environment:
  #     - CC=/usr/bin/cc
  #     - CXX=/usr/bin/c++
  #     - DISPLAY=:1                      # result of:  echo $DISPLAY 
  #     - QT_X11_NO_MITSHM=1
  #     - XAUTHORITY=/home/valentin/.Xauthority
  #     - DOCKER_USER_NAME=valentin       # $(id -un)
  #     - DOCKER_USER_ID=1000             # $(id -u)
  #     - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
  #     - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
  #     - ROS_IP=127.0.0.1 
  #     - NVIDIA_DRIVER_CAPABILITIES=all
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_foxy_nvidia
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
  #   command: /bin/sh -c "while sleep 1000; do :; done"     
##############################################################################################################
#  noetic_nvidia:
#    image: ros_noetic_nvidia
#    network_mode: "host" 
#    privileged: true
#    volumes:
#      - /home/valentin/catkin_ws:/home/valentin/catkin_ws               # homeDir:containerDir
#      - /tmp/.X11-unix:/tmp/.X11-unix:rw
#      - /home/valentin/.Xauthority:/home/valentin/.Xauthority
#    devices:
#      - /dev:/dev
#    environment:
#      - CC=/usr/bin/cc
#      - CXX=/usr/bin/c++
#      - DISPLAY=:1                      # result of:  echo $DISPLAY 
#      - QT_X11_NO_MITSHM=1
#      - XAUTHORITY=/home/valentin/.Xauthority
#      - DOCKER_USER_NAME=valentin       # $(id -un)
#      - DOCKER_USER_ID=1000             # $(id -u)
#      - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
#      - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
#      - ROS_IP=127.0.0.1 
#      - NVIDIA_DRIVER_CAPABILITIES=all
#    build:
#      context: .
#      dockerfile: ./Dockerfile_noetic_nvidia
#    cap_add:
#      - SYS_PTRACE
#    security_opt:
#      - seccomp:unconfined   
#    command: /bin/sh -c "while sleep 1000; do :; done"  
##############################################################################################################
   melodic_nvidia:
     image: ros_melodic_nvidia
     network_mode: "host" 
     privileged: true
     volumes:
       - /home/valentin/catkin_ws:/home/valentin/catkin_ws               # homeDir:containerDir
       - /tmp/.X11-unix:/tmp/.X11-unix:rw
       - /home/valentin/.Xauthority:/home/valentin/.Xauthority
       - /home/valentin/Projects/ros_dockerfiles
     devices:
       - /dev:/dev
     environment:
       - CC=/usr/bin/cc
       - CXX=/usr/bin/c++
       - DISPLAY=:1                      # result of:  echo $DISPLAY 
       - QT_X11_NO_MITSHM=1
       - XAUTHORITY=/home/valentin/.Xauthority
       - DOCKER_USER_NAME=valentin       # $(id -un)
       - DOCKER_USER_ID=1000             # $(id -u)
       - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
       - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
       - ROS_IP=127.0.0.1 
       - NVIDIA_DRIVER_CAPABILITIES=all
     build:
       context: .
       dockerfile: ./Dockerfile_melodic_nvidia
     cap_add:
       - SYS_PTRACE
     security_opt:
       - seccomp:unconfined   
     command: /bin/sh -c "while sleep 1000; do :; done"  
##############################################################################################################
  # galactic_intel:
  #   image: ros_galactic_intel
  #   network_mode: "host" 
  #   privileged: true
  #   volumes:
  #     - /home/valentin/ros2_ws:/home/valentin/ros2_ws                    # homeDir:containerDir
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /home/valentin/.Xauthority:/home/valentin/.Xauthority
  #   devices:
  #     - "/dev:/dev"
  #   environment:
  #     - CC=/usr/bin/cc
  #     - CXX=/usr/bin/c++
  #     - DISPLAY=:0
  #     - QT_X11_NO_MITSHM=1
  #     - XAUTHORITY=/home/valentin/.Xauthority
  #     - DOCKER_USER_NAME=valentin       # $(id -un)
  #     - DOCKER_USER_ID=1000             # $(id -u)
  #     - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
  #     - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
  #     - ROS_IP=127.0.0.1 
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_galactic_intel
  #   # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
    # # Overrides default command so things don't shut down after the process ends.
    # command: /bin/sh -c "while sleep 1000; do :; done"   
# run this command: docker-compose --file compose.yaml up galactic_intel
##############################################################################################################
#   noetic_intel:
#     image: ros_noetic_intel2
#     network_mode: "host" 
#     privileged: true
#     volumes:
#       - /home/valentin/catkin_ws:/home/valentin/catkin_ws                     # homeDir:containerDir
#       - /tmp/.X11-unix:/tmp/.X11-unix:rw
#       - /home/valentin/.Xauthority:/home/valentin/.Xauthority
#     devices:
#       - "/dev:/dev"
#     environment:
#       - CC=/usr/bin/cc
#       - CXX=/usr/bin/c++
#       - DISPLAY=:0
#       - QT_X11_NO_MITSHM=1
#       - XAUTHORITY=/home/valentin/.Xauthority
#       - DOCKER_USER_NAME=valentin       # $(id -un)
#       - DOCKER_USER_ID=1000             # $(id -u)
#       - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
#       - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
#       - ROS_IP=127.0.0.1 
#     build:
#       context: .
#       dockerfile: ./Dockerfile_noetic_intel2
#     # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
#     cap_add:
#       - SYS_PTRACE
#     security_opt:
#       - seccomp:unconfined   
#     # Overrides default command so things don't shut down after the process ends.
#     command: /bin/sh -c "while sleep 1000; do :; done"
# ##run this command: docker-compose --file compose.yaml up noetic_intel
##############################################################################################################
#   melodic_intel:
#     image: ros_melodic_intel
#     network_mode: "host" 
#     privileged: true
#     volumes:
#       - /home/valentin/catkin_ws:/home/valentin/catkin_ws                     # homeDir:containerDir
#       - /tmp/.X11-unix:/tmp/.X11-unix:rw
#       - /home/valentin/.Xauthority:/home/valentin/.Xauthority
#     devices:
#       - "/dev:/dev"
#     environment:
#       - CC=/usr/bin/cc
#       - CXX=/usr/bin/c++
#       - DISPLAY=:0
#       - QT_X11_NO_MITSHM=1
#       - XAUTHORITY=/home/valentin/.Xauthority
#       - DOCKER_USER_NAME=valentin       # $(id -un)
#       - DOCKER_USER_ID=1000             # $(id -u)
#       - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
#       - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
#       - ROS_IP=127.0.0.1 
#     build:
#       context: .
#       dockerfile: ./Dockerfile_melodic_intel
#     # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
#     cap_add:
#       - SYS_PTRACE
#     security_opt:
#       - seccomp:unconfined   
#     # Overrides default command so things don't shut down after the process ends.
#     command: /bin/sh -c "while sleep 1000; do :; done"
# ###run this command: docker-compose --file compose.yaml up noetic_intel
##############################################################################################################
  # kinetic_intel:
  #   image: ros_kinetic_intel
  #   network_mode: "host" 
  #   privileged: true
  #   volumes:
  #     - /home/valentin/catkin_ws:/home/valentin/catkin_ws                     # homeDir:containerDir
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /home/valentin/.Xauthority:/home/valentin/.Xauthority
  #   devices:
  #     - "/dev:/dev"
  #   environment:
  #     - CC=/usr/bin/cc
  #     - CXX=/usr/bin/c++
  #     - DISPLAY=:0
  #     - QT_X11_NO_MITSHM=1
  #     - XAUTHORITY=/home/valentin/.Xauthority
  #     - DOCKER_USER_NAME=valentin       # $(id -un)
  #     - DOCKER_USER_ID=1000             # $(id -u)
  #     - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
  #     - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
  #     - ROS_IP=127.0.0.1 
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_kinetic_intel
  #   # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
  #   # Overrides default command so things don't shut down after the process ends.
  #   command: /bin/sh -c "while sleep 1000; do :; done"
###run this command: docker-compose --file compose.yaml up noetic_intel
##############################################################################################################
  # foxy_intel:
  #   image: ros_foxy_intel
  #   network_mode: "host" 
  #   privileged: true
  #   volumes:
  #     - /home/valentin/ros2_ws:/home/valentin/ros2_ws                    # homeDir:containerDir
  #     - /tmp/.X11-unix:/tmp/.X11-unix:rw
  #     - /home/valentin/.Xauthority:/home/valentin/.Xauthority
  #   devices:
  #     - "/dev:/dev"
  #   environment:
  #     - CC=/usr/bin/cc
  #     - CXX=/usr/bin/c++
  #     - DISPLAY=:0
  #     - QT_X11_NO_MITSHM=1
  #     - XAUTHORITY=/home/valentin/.Xauthority
  #     - DOCKER_USER_NAME=valentin       # $(id -un)
  #     - DOCKER_USER_ID=1000             # $(id -u)
  #     - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
  #     - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
  #     - ROS_IP=127.0.0.1 #      config : intel_env
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile_foxy_intel
  #   # [Optional] Required for ptrace-based debuggers like C++, Go, and Rust
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - seccomp:unconfined   
  #   # Overrides default command so things don't shut down after the process ends.
  #   command: /bin/sh -c "while sleep 1000; do :; done"   
##############################################################################################################
##############################################################################################################
   
# volumes:
#   common_volumes:
#     - /tmp/.X11-unix:/tmp/.X11-unix:rw
#     - /home/valentin/.Xauthority:/home/valentin/.Xauthority

# configs:
#   intel_env:
#     environment:
#       - CC=/usr/bin/cc
#       - CXX=/usr/bin/c++
#       - DISPLAY=:0
#       - QT_X11_NO_MITSHM=1
#       - XAUTHORITY=/home/valentin/.Xauthority
#       - DOCKER_USER_NAME=valentin       # $(id -un)
#       - DOCKER_USER_ID=1000             # $(id -u)
#       - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
#       - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
#       - ROS_IP=127.0.0.1 
#   nvidia_env:
#     environment:
#       - CC=/usr/bin/cc
#       - CXX=/usr/bin/c++
#       - DISPLAY=:1                      # result of:  echo $DISPLAY 
#       - QT_X11_NO_MITSHM=1
#       - XAUTHORITY=/home/valentin/.Xauthority
#       - DOCKER_USER_NAME=valentin       # $(id -un)
#       - DOCKER_USER_ID=1000             # $(id -u)
#       - DOCKER_USER_GROUP_NAME=valentin # $(id -gn)
#       - DOCKER_USER_GROUP_ID=1000       # $(id -g) 
#       - ROS_IP=127.0.0.1 
#       - NVIDIA_DRIVER_CAPABILITIES=all
##############################################################################################################
    
